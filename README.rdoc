= LAZAR-GUI

This is an example GUI for the <tt>lazar</tt>[lazar.in-silico.de] prediction system and public data from the DSSTOX[http://www.epa.gov/nheerl/dsstox/] project.

== Installation

=== Prerequisites

- Git (http://git.or.cz) to get the source code 

==== Debian and Ubuntu

The installation script (see below) installs all prerequisites. You have to have sudo (http://www.sudo.ws/) installed and configured.

==== Other distributions

You will have to install the prerequisites with your favorite package manager. Please make shure to have

- Java Development Kit (JDK) (http://java.sun.com)
- SQLite3 (http://www.sqlite.org), including development package
- Git (http://git.or.cz) 
- Wget (http://www.gnu.org/software/wget/)
- Basic development tools (including gcc (http://http://gcc.gnu.org) and fortran compilers)
- GSL (http://www.gnu.org/software/gsl/)

=== Get the GUI source code

- Clone the git repository <tt>git clone git://github.com/helma/lazar-gui.git</tt>

=== Install programs, libraries, plugins and data

- Move into the directory (e.g. <tt>cd /var/www/lazar-gui</tt>)
- Run <tt>script/install</tt>

This will download and install further programs, libraries, plugins and data that are required to run the GUI. The initial installation is quite time consuming, because we have to compile programs and libraries to obtain platform independence.

=== Start the <tt>lazar</tt> daemon

<tt>vendor/bin/rake lazar:daemon:start RAILS_ENV=production</tt>

=== Start the GUI server

<tt>vendor/bin/thin start -d -p 8000 -e production</tt>

The GUI will now be available at port 8000 of your machine. You can access it from any browser by pointing it to <tt>http://yourserver:8000</tt>. You will have to enable Java and Javascript in the client browsers to use the molecular editor.

If performance is an issue, you can use Thin (http://code.macournoyer.com/thin/) or Mongrel (http://mongrel.rubyforge.org) in conjunction with a traditional webserver (e.g. Apache) to serve the GUI. You can find installation instructions here[http://mongrel.rubyforge.org/wiki/Apache].

== Upgrading

- Stop the GUI server: <tt>vendor/bin/thin stop</tt>
- Stop the lazar daemon: <tt>vendor/bin/rake lazar:daemon:stop RAILS_ENV=production</tt>
- Get the update: <tt>git pull</tt>
- Rerun the installation scripts: <tt>script/install</tt> 
- Start the <tt>lazar</tt> daemon: <tt>vendor/bin/rake lazar:daemon:start RAILS_ENV=production</tt>
- Start the GUI server: <tt>vendor/bin/thin start -d -p 8000 -e production</tt>


